application {
  config {
    skipClient false
    skipServer false
    baseName gallery
    packageName io.susimsek.gallery
    applicationType monolith
    authenticationType jwt
    databaseType sql
    devDatabaseType h2Memory
    prodDatabaseType postgresql
    searchEngine elasticsearch
    enableHibernateCache true
    cacheProvider redis
    dtoSuffix Dto
    entitySuffix false
    jhiPrefix sys
    buildTool maven
    clientFramework react
    clientPackageManager npm
    testFrameworks [protractor]
	nativeLanguage tr
    languages [tr, en, de, it, zh-cn]
    serverPort 9090
  }
  entities *
}

@filter
@dto(mapstruct)
@service(serviceImpl)
@paginate(pagination)
@search(elasticsearch)
entity Album {
    title String required
    description TextBlob
    created Instant
}

@filter
@dto(mapstruct)
@service(serviceImpl)
@paginate(infinite-scroll)
@search(elasticsearch)
entity Photo {
    title String required
    description TextBlob
    image ImageBlob required
    height Integer
    width Integer
    taken Instant
    uploaded Instant
}

@filter
@dto(mapstruct)
@service(serviceImpl)
@paginate(infinite-scroll)
@search(elasticsearch)
entity Tag {
    name String required minlength(2)
}

relationship ManyToOne {
    Album{user(login)} to User
    Photo{album(title)} to Album
}

relationship ManyToMany {
    Photo{tag(name)} to Tag{photo}
}